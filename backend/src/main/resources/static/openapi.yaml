openapi: 3.0.3
info:
  title: Beaver Budget API
  version: 1.0.0
  description: Contract for Beaver Budget API
servers:
  - url: http://localhost:8080

tags:
  - name: user
    description: Users API
  - name: account
    description: Accounts API
  - name: accountTransaction
    description: Account Transactions API
  - name: transaction
    description: Transactions API

paths:
  /users:
    post:
      tags:
        - user
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    get:
      tags:
        - user
      summary: List all users
      operationId: listUsers
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      tags:
        - user
      summary: Get user by ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - user
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - user
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

  /accounts:
    post:
      tags:
        - account
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    get:
      tags:
        - account
      summary: List accounts
      operationId: listAccounts
      responses:
        '200':
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'

  /accounts/{accountId}:
    get:
      tags:
        - account
      summary: Get account by ID
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      tags:
        - account
      summary: Update an existing account
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Updated account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - account
      summary: Delete an account
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Account deleted

  /accounts/{accountId}/transactions:
    post:
      tags:
        - accountTransaction
      summary: Create a transaction
      operationId: createAccountTransaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

    get:
      tags:
        - accountTransaction
      summary: List all account transactions
      operationId: listAccountTransactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: from
          in: query
          description: Start date for filtering (inclusive)
          required: false
          schema:
            type: string
            format: date
            example: '2025-01-01'
        - name: to
          in: query
          description: End date for filtering (inclusive)
          required: false
          schema:
            type: string
            format: date
            example: '2025-01-31'
      responses:
        '200':
          description: A list of account transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /accounts/{accountId}/transactions/{transactionId}/execute:
    post:
      tags:
        - accountTransaction
      summary: Executes the planned transaction, creating an actual one
      operationId: postExecutePlannedAccountTransaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  /accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - accountTransaction
      summary: Retrieves the account transaction with the provided transaction id
      operationId: getAccountTransactionById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account Transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

    put:
      tags:
        - accountTransaction
      summary: Update an account transaction
      operationId: updateAccountTransaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '204':
          description: Updated Account Transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

    delete:
      tags:
        - accountTransaction
      summary: Delete an account transaction
      operationId: deleteAccountTransaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Transaction deleted


  /transactions:
    get:
      tags:
        - transaction
      summary: List all transactions
      operationId: listTransactions
      parameters:
        - name: from
          in: query
          description: Start date for filtering (inclusive)
          required: false
          schema:
            type: string
            format: date
            example: '2025-01-01'
        - name: to
          in: query
          description: End date for filtering (inclusive)
          required: false
          schema:
            type: string
            format: date
            example: '2025-01-31'
      responses:
        '200':
          description: A list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /transactions/{transactionId}:
    get:
      tags:
        - transaction
      summary: Get transaction by ID
      operationId: getTransactionById
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    put:
      tags:
        - transaction
      summary: Update a transaction
      operationId: updateTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Updated transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      tags:
        - transaction
      summary: Delete a transaction
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Transaction deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
    Account:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        balance:
          type: number
        currency:
          type: string
        userId:
          type: integer
    Transaction:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
        type:
          type: string
          enum: [INCOME, EXPENSE]
        date:
          type: string
          format: date
        description:
          type: string
        accountId:
          type: integer
        planned:
          type: boolean
